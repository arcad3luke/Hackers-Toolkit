#############################################################################
# Generated by PAGE version 7.5
#  in conjunction with Tcl version 8.6
#  Nov 30, 2022 06:49:24 PM EST  platform: Windows NT
set vTcl(timestamp) ""
if {![info exists vTcl(borrow)]} {
    ::vTcl::MessageBox -title Error -message  "You must open project files from within PAGE."
    exit}


set image_list { 
}
vTcl:create_project_images $image_list   ;# In image.tcl

if {!$vTcl(borrow) && !$vTcl(template)} {

set vTcl(actual_gui_font_dft_desc)  TkDefaultFont
set vTcl(actual_gui_font_dft_name)  TkDefaultFont
set vTcl(actual_gui_font_text_desc)  TkTextFont
set vTcl(actual_gui_font_text_name)  TkTextFont
set vTcl(actual_gui_font_fixed_desc)  TkFixedFont
set vTcl(actual_gui_font_fixed_name)  TkFixedFont
set vTcl(actual_gui_font_menu_desc)  TkMenuFont
set vTcl(actual_gui_font_menu_name)  TkMenuFont
set vTcl(actual_gui_font_tooltip_desc)  TkDefaultFont
set vTcl(actual_gui_font_tooltip_name)  TkDefaultFont
set vTcl(actual_gui_font_treeview_desc)  TkDefaultFont
set vTcl(actual_gui_font_treeview_name)  TkDefaultFont
########################################### 
set vTcl(actual_gui_bg) #d9d9d9
set vTcl(actual_gui_fg) #000000
set vTcl(actual_gui_analog) #ececec
set vTcl(actual_gui_menu_analog) #ececec
set vTcl(actual_gui_menu_bg) #d9d9d9
set vTcl(actual_gui_menu_fg) #000000
set vTcl(complement_color) gray40
set vTcl(analog_color_p) #c3c3c3
set vTcl(analog_color_m) beige
set vTcl(tabfg1) black
set vTcl(tabfg2) black
set vTcl(actual_gui_menu_active_bg)  #ececec
set vTcl(actual_gui_menu_active_fg)  #000000
########################################### 
set vTcl(pr,autoalias) 1
set vTcl(pr,relative_placement) 1
set vTcl(mode) Relative
}




proc vTclWindow.top1 {base} {
    global vTcl
    if {$base == ""} {
        set base .top1
    }
    if {[winfo exists $base]} {
        wm deiconify $base; return
    }
    set top $base
    set target $base
    ###################
    # CREATING WIDGETS
    ###################
    vTcl::widgets::core::toplevel::createCmd $top -class Toplevel \
        -menu {{}} -background #400080 \
        -highlightbackground $vTcl(actual_gui_bg) -highlightcolor #400080 
    wm focusmodel $top passive
    wm geometry $top 600x450+322+134
    update
    # set in toplevel.wgt.
    global vTcl
    global img_list
    set vTcl(save,dflt,origin) 0
    wm maxsize $top 4924 1901
    wm minsize $top 120 1
    wm overrideredirect $top 0
    wm resizable $top 1 1
    wm deiconify $top
    set toptitle "Toplevel 0"
    wm title $top $toptitle
    namespace eval ::widgets::${top}::ClassOption {}
    set ::widgets::${top}::ClassOption(-toptitle) $toptitle
    vTcl:DefineAlias "$top" "SwipeDown" vTcl:Toplevel:WidgetProc "" 1
    set vTcl(real_top) {}
    labelframe $top.lab46 \
        -font TkDefaultFont -foreground $vTcl(actual_gui_fg) -text SwipeDown \
        -background $vTcl(actual_gui_bg) -height 425 \
        -highlightbackground $vTcl(actual_gui_bg) -highlightcolor black \
        -width 580 
    vTcl:DefineAlias "$top.lab46" "Labelframe1" vTcl:WidgetProc "SwipeDown" 1
    set site_3_0 $top.lab46
    label $site_3_0.lab47 \
        -activebackground #f9f9f9 -activeforeground SystemButtonText \
        -anchor w -background $vTcl(actual_gui_bg) -compound left \
        -disabledforeground #a3a3a3 -font TkDefaultFont \
        -foreground $vTcl(actual_gui_fg) \
        -highlightbackground $vTcl(actual_gui_bg) -highlightcolor black \
        -text {SwipeDown options:} 
    vTcl:DefineAlias "$site_3_0.lab47" "Label1" vTcl:WidgetProc "SwipeDown" 1
    label $site_3_0.lab48 \
        -activebackground #f9f9f9 -activeforeground SystemButtonText \
        -anchor w -background $vTcl(actual_gui_bg) -compound left \
        -disabledforeground #a3a3a3 -font TkDefaultFont \
        -foreground $vTcl(actual_gui_fg) \
        -highlightbackground $vTcl(actual_gui_bg) -highlightcolor black \
        -text {Web Scrape} 
    vTcl:DefineAlias "$site_3_0.lab48" "Label2" vTcl:WidgetProc "SwipeDown" 1
    button $site_3_0.but49 \
        -activebackground #400080 -activeforeground black \
        -background $vTcl(actual_gui_bg) \
        -command {import time
import bs4

from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys


driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))
soup = bs4.BeautifulSoup()

def scrape(count):

    driver.get("https://www.google.com/")
    search = driver.find_element(by=By.NAME, value='q')
    result = search.send_keys("inurl: 'index of /admin'")
    search.send_keys(Keys.ENTER)
    matches = soup.find_all(result)
    len_match = len(matches)

    time.sleep(300)
    driver.quit()
    with open('./scraping.txt', 'a+') as f:
        for i in matches:
            f.write(str(count) + '.' + i + '\n')
            f.write("There were " + str(len_match) + " matches found for your keyword:\n")
        f.close()

go = scrape(count=1)} \
        -compound left -disabledforeground #a3a3a3 -font TkDefaultFont \
        -foreground $vTcl(actual_gui_fg) \
        -highlightbackground $vTcl(actual_gui_bg) -highlightcolor black \
        -pady 0 -text Scrape 
    vTcl:DefineAlias "$site_3_0.but49" "scrapeButton" vTcl:WidgetProc "SwipeDown" 1
    bind $site_3_0.but49 <Button-1> {
        lambda e: xxx(e)
    }
    label $site_3_0.lab50 \
        -activebackground #f9f9f9 -activeforeground SystemButtonText \
        -anchor w -background $vTcl(actual_gui_bg) -compound left \
        -disabledforeground #a3a3a3 -font TkDefaultFont \
        -foreground $vTcl(actual_gui_fg) \
        -highlightbackground $vTcl(actual_gui_bg) -highlightcolor black \
        -text {Sql Injection} 
    vTcl:DefineAlias "$site_3_0.lab50" "Label3" vTcl:WidgetProc "SwipeDown" 1
    button $site_3_0.but51 \
        -activebackground $vTcl(analog_color_m) -activeforeground black \
        -background $vTcl(actual_gui_bg) \
        -command {def sqlInject():
    """"
    learn sql injection and make a script for it. 
    import encodings

import requests


# import SwipeDown.SwipeDown.swipedown as sd
from sqlmap import sqlmap

# @TODO
# 1.) Make the script search the page for a login form
# 2.) Make the script scan the login form for vuln(s)
# 3.) Make the script attempt to authenticate using forms
# 4.) Add JS login prompt() scanner to expand reach
# 5.) Integrate with SwipeDown


def sql():
    # requests.get(url, params={key: value}, args) # Basic get request syntax
    url = input('Enter a URL (don\'t worry about the https part):')  # QoL feature
    r = requests.get(f'https://{url}')
    if r.encoding != encodings.utf_8:
        print('''Encoding not utf-8!\nWe don\'t support this yet, but it\'s a work in progress!''')
        print(f'Encoding: {r.encoding}')
    else:
        if r.is_redirect:  # If we get a 301, check and see if we want to follow the link.
            print(f'{r} is not the final destination, continue? (Y/N)')
            if '%s'.upper() == 'Y' or 'YES':
                # Return the HTTP status, the reason for the redirect,
                # the kind of encoding used, and output to json
                print(r.ok, '\n', r.reason, r.encoding, r.json())  # @TODO WIP
            else:
                print(r, f'Status: {r.status_code}')
        else:  # Main chunk of injection script.
            try:
                input(f'{r} seems normal, continue? (Y/N)')
                if '%s'.upper() == 'Y':
                    print(r.ok, r.encoding, r.headers)
                    sqlmap.crawl(r.url)

            except KeyboardInterrupt:
                print('Keyboard broke things, please restart.')


if __name__ == '__main__':
    sql()

    
    """
sqlInject()} \
        -compound left -disabledforeground #a3a3a3 -font TkDefaultFont \
        -foreground $vTcl(actual_gui_fg) \
        -highlightbackground $vTcl(actual_gui_bg) -highlightcolor black \
        -pady 0 -text Button 
    vTcl:DefineAlias "$site_3_0.but51" "Button2" vTcl:WidgetProc "SwipeDown" 1
    label $site_3_0.lab52 \
        -activebackground #f9f9f9 -activeforeground SystemButtonText \
        -anchor w -background $vTcl(actual_gui_bg) -compound left \
        -disabledforeground #a3a3a3 -font TkDefaultFont \
        -foreground $vTcl(actual_gui_fg) \
        -highlightbackground $vTcl(actual_gui_bg) -highlightcolor black \
        -text {HTTP Parameter Pollution} 
    vTcl:DefineAlias "$site_3_0.lab52" "Label4" vTcl:WidgetProc "SwipeDown" 1
    button $site_3_0.but53 \
        -activebackground $vTcl(analog_color_m) -activeforeground black \
        -background $vTcl(actual_gui_bg) \
        -command {class httpPollute:
    """

    @TODO
    Learn HTTP Parameter Pollution and write a script.

    """} \
        -compound left -disabledforeground #a3a3a3 -font TkDefaultFont \
        -foreground $vTcl(actual_gui_fg) \
        -highlightbackground $vTcl(actual_gui_bg) -highlightcolor black \
        -pady 0 -text Button 
    vTcl:DefineAlias "$site_3_0.but53" "Button3" vTcl:WidgetProc "SwipeDown" 1
    label $site_3_0.lab54 \
        -activebackground #f9f9f9 -activeforeground SystemButtonText \
        -anchor w -background $vTcl(actual_gui_bg) -compound left \
        -disabledforeground #a3a3a3 -font TkDefaultFont \
        -foreground $vTcl(actual_gui_fg) \
        -highlightbackground $vTcl(actual_gui_bg) -highlightcolor black \
        -text {CSS Injection} 
    vTcl:DefineAlias "$site_3_0.lab54" "Label5" vTcl:WidgetProc "SwipeDown" 1
    button $site_3_0.but55 \
        -activebackground $vTcl(analog_color_m) -activeforeground black \
        -background $vTcl(actual_gui_bg) \
        -command {class cssInject:
    """

    @TODO
    learn CSS Injection and create a script for it.
    """


    pass} \
        -compound left -disabledforeground #a3a3a3 -font TkDefaultFont \
        -foreground $vTcl(actual_gui_fg) \
        -highlightbackground $vTcl(actual_gui_bg) -highlightcolor black \
        -pady 0 -text Button 
    vTcl:DefineAlias "$site_3_0.but55" "Button4" vTcl:WidgetProc "SwipeDown" 1
    label $site_3_0.lab56 \
        -activebackground #f9f9f9 -activeforeground SystemButtonText \
        -anchor w -background $vTcl(actual_gui_bg) -compound left \
        -disabledforeground #a3a3a3 -font TkDefaultFont \
        -foreground $vTcl(actual_gui_fg) \
        -highlightbackground $vTcl(actual_gui_bg) -highlightcolor black \
        -text Deface 
    vTcl:DefineAlias "$site_3_0.lab56" "Label6" vTcl:WidgetProc "SwipeDown" 1
    button $site_3_0.but57 \
        -activebackground $vTcl(analog_color_m) -activeforeground black \
        -background $vTcl(actual_gui_bg) -compound left \
        -disabledforeground #a3a3a3 -font TkDefaultFont \
        -foreground $vTcl(actual_gui_fg) \
        -highlightbackground $vTcl(actual_gui_bg) -highlightcolor black \
        -pady 0 -text Button 
    vTcl:DefineAlias "$site_3_0.but57" "Button5" vTcl:WidgetProc "SwipeDown" 1
    place $site_3_0.lab47 \
        -in $site_3_0 -x 0 -relx 0.017 -y 0 -rely 0.071 -width 0 \
        -relwidth 0.937 -height 0 -relheight 0.049 -anchor nw \
        -bordermode ignore 
    place $site_3_0.lab48 \
        -in $site_3_0 -x 0 -relx 0.018 -y 0 -rely 0.141 -width 0 \
        -relwidth 0.13 -height 0 -relheight 0.049 -anchor nw \
        -bordermode ignore 
    place $site_3_0.but49 \
        -in $site_3_0 -x 0 -relx 0.281 -y 0 -rely 0.141 -width 87 -relwidth 0 \
        -height 24 -relheight 0 -anchor nw -bordermode ignore 
    place $site_3_0.lab50 \
        -in $site_3_0 -x 0 -relx 0.018 -y 0 -rely 0.212 -width 0 \
        -relwidth 0.253 -height 0 -relheight 0.049 -anchor nw \
        -bordermode ignore 
    place $site_3_0.but51 \
        -in $site_3_0 -x 0 -relx 0.281 -y 0 -rely 0.212 -width 87 -relwidth 0 \
        -height 24 -relheight 0 -anchor nw -bordermode ignore 
    place $site_3_0.lab52 \
        -in $site_3_0 -x 0 -relx 0.018 -y 0 -rely 0.306 -width 0 \
        -relwidth 0.253 -height 0 -relheight 0.026 -anchor nw \
        -bordermode ignore 
    place $site_3_0.but53 \
        -in $site_3_0 -x 0 -relx 0.281 -y 0 -rely 0.282 -width 87 -relwidth 0 \
        -height 24 -relheight 0 -anchor nw -bordermode ignore 
    place $site_3_0.lab54 \
        -in $site_3_0 -x 0 -relx 0.018 -y 0 -rely 0.376 -width 0 \
        -relwidth 0.253 -height 0 -relheight 0.026 -anchor nw \
        -bordermode ignore 
    place $site_3_0.but55 \
        -in $site_3_0 -x 0 -relx 0.281 -y 0 -rely 0.353 -width 87 -relwidth 0 \
        -height 24 -relheight 0 -anchor nw -bordermode ignore 
    place $site_3_0.lab56 \
        -in $site_3_0 -x 0 -relx 0.018 -y 0 -rely 0.447 -width 0 \
        -relwidth 0.253 -height 0 -relheight 0.026 -anchor nw \
        -bordermode ignore 
    place $site_3_0.but57 \
        -in $site_3_0 -x 0 -relx 0.281 -y 0 -rely 0.424 -width 87 -relwidth 0 \
        -height 24 -relheight 0 -anchor nw -bordermode ignore 
    ###################
    # SETTING GEOMETRY
    ###################
    place $top.lab46 \
        -in $top -x 0 -relx 0.017 -y 0 -rely 0.044 -width 0 -relwidth 0.967 \
        -height 0 -relheight 0.944 -anchor nw -bordermode ignore 

    vTcl:FireEvent $base <<Ready>>
}

proc 36 {args} {return 1}


Window show .
set btop1 ""
if {$vTcl(borrow)} {
    set btop1 .bor[expr int([expr rand() * 100])]
    while {[lsearch $btop1 $vTcl(tops)] != -1} {
        set btop1 .bor[expr int([expr rand() * 100])]
    }
}
set vTcl(btop) $btop1
Window show .top1 $btop1
if {$vTcl(borrow)} {
    $btop1 configure -background plum
}

